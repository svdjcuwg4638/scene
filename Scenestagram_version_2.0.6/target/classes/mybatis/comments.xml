<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itbank.repository.CommentsDAO">
	<select id="selectComments" parameterType="hashmap"
		resultType="hashmap">
		select C.*, U.nick_name, U.user_img,
		(select count(*) from
		comments_users_like where post_idx=C.post_idx and
		comments_idx=C.idx)
		as comment_like_count,
		(select count(*) from comments_users_like where
		post_idx=C.post_idx and
		comments_idx=C.idx and users_idx=#{users_idx})
		as comment_like_status,
		(select count(*) from comments where
		parent_idx=C.idx and
		status='activate') as comment_count from

		(select *
		from comments
		where post_idx=#{post_idx} and status='activate') C
		join
		users U
		on C.users_idx=U.idx
		start with C.parent_idx = 0
		connect by prior
		C.idx = C.parent_idx
		order
		siblings by C.idx desc
	</select>

	<insert id="insertComments" parameterType="comments">
		insert into
		comments(post_idx, users_idx, parent_idx, depth, content)
		values(
		#{post_idx}, #{users_idx}, #{parent_idx}, #{depth}, #{content}
		)
	</insert>

	<select id="selectCommentsIDX" parameterType="hashmap"
		resultType="integer">
		select comments_idx from comments_users_like
		where
		post_idx=#{post_idx} and users_idx=#{users_idx}
	</select>

	<select id="selectLikeStatus" parameterType="hashmap"
		resultType="integer">
		select count(*) from comments_users_like where
		post_idx=#{post_idx} and comments_idx=#{comment_idx} and
		users_idx=#{users_idx}
	</select>

	<insert id="insertLike" parameterType="hashmap">
		insert into
		comments_users_like(post_idx, comments_idx, users_idx) values(
		#{post_idx}, #{comment_idx}, #{users_idx}
		)
	</insert>

	<delete id="deleteLike" parameterType="hashmap">
		delete comments_users_like
		where post_idx=#{post_idx} and comments_idx=#{comment_idx} and
		users_idx=#{users_idx}
	</delete>

	<select id="searchHashTag" parameterType="string"
		resultType="int">
		select count(*) from hashtag where hashtag=#{tag}
	</select>

	<insert id="insertHashTag" parameterType="string">
		insert into hashtag
		values(
		hashtag_seq.nextval, #{tag}
		)
	</insert>

	<select id="getHashIDX" parameterType="string" resultType="int">
		select idx from hashtag where hashtag=#{tag}
	</select>

	<select id="getMaxIDX" parameterType="hashmap" resultType="int">
		select max(idx) from comments where post_idx=#{post_idx} and
		users_idx=#{users_idx}
	</select>

	<insert id="insertCommentsHashTag" parameterType="hashmap">
		insert into
		comments_hashtag(post_idx, comments_idx, hashtag_idx) values(
		#{post_idx}, #{comments_idx}, #{tag}
		)
	</insert>

	<update id="updateCommentStatus" parameterType="int">
		update comments
		set status='deactivate' where idx=#{comment_idx}
	</update>
</mapper>